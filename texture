#!/usr/bin/env perl
#
# Texture utilities
# Sub-commands:
#  - view <file>: Print the colorized texture from the given file.
#  - table: Print out characters next to the colors they produce.

sub print_help {
    my ($file) = @_;
    print $file <<HELP;
TS3D texture utilities.
Usage: $0 <sub-command> [arguments]
Sub-commands:
  help        Print this help.
  table       Print a table of characters corresponding to texture pixel colors.
  view <file> Print a colorized version of the texture file given.
HELP
}

sub error {
    my ($msg) = @_;
    say STDERR "$msg";
    exit 1;
}

sub colorize_pix {
    my ($pix) = @_;
    my $code = ord($pix) - ord(' ') - 1;
    if ( $code >= 0 && $code < 64 ) {
        my $fg     = $code >> 3;
        my $bg     = $code & 0b111;
        my $bright = $bg ? '1;' : '';
        $pix = "\e[${bright}3${fg};4${bg}m#\e[0m";
    }
    return $pix;
}

my $subcmd = @ARGV[0];
if ( $subcmd eq 'view' ) {
    if ($#ARGV < 1) {
        &error("Usage: $0 view <texture-file>");
    }
    open( my $file, "<", @ARGV[1] )
        or &error("$0: Can't open file @ARGV[1]");
    while ( defined( my $pix = getc($file) ) ) {
        print &colorize_pix($pix);
    }
}
elsif ( $subcmd eq 'table' ) {
    my $ascii = ' ';
    for ( my $y = 0 ; $y < 8 ; ++$y ) {
        for ( my $x = 0 ; $x < 8 ; ++$x ) {
            $ascii = chr( ord($ascii) + 1 );
            printf "%s%s   ", $ascii, &colorize_pix($ascii);
        }
        print "\n";
    }
}
elsif ( $subcmd eq 'help' ) {
    &print_help(STDOUT);
}
else {
    say STDERR "$0: Invalid sub-command";
    &print_help(STDERR);
    exit 1;
}
